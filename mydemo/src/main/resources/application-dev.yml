#服务端口,路径
server:
  port: 7777
#服务名
  application:
    name: product
#swagger配置
swagger:
  basepackage: "com.saraad.controller"
  title: "Product Service"

db:
  druid:
    #test
    url: jdbc:mysql://118.89.191.136:6630/fm_mg_takeout?useUnicode=true&characterEncoding=utf8
    username: DevZT
    password: Z12lFI&ZugOOW%tN
#    url: jdbc:mysql://localhost:3306/training
#    username: root
#    password: root
    driver-class: com.mysql.jdbc.Driver
    max-active: 100
    min-idle: 1
    initial-size: 5
    max-wait: 60000
    #有两个含义：
    #1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接。
    #2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
    timeBetweenEvictionRunsMillis: 60000
    #连接保持空闲而不被驱逐的最小时间
    minEvictableIdleTimeMillis: 300000
    #用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。
    validationQuery: "select 'x'"
    #建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
    testWhileIdle: true
    #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
    testOnReturn: false
    #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
    testOnBorrow: true

#kafka消费者设置
kafka:
  consumer:
    servers: 47.103.128.94:9093
    enable.auto.commit: true #是否自动提交
    session.timeout: 20000 #连接超时时间
    auto.commit.interval: 100
    auto.offset.reset: latest #实时生产，实时消费，不会从头开始消费
    topic: test
    group:
      id1: group1
      id2: group2
    concurrency: 6  #设置消费线程数